buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'com.dapenbi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenLocal()
	mavenCentral()
    jcenter()
    maven{url "http://jasperreports.sourceforge.net/maven2/"}
    maven{url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"}
}

configurations {
    jasperreports {
        transitive = true
    }
}

gradle.projectsEvaluated {
    processResources.dependsOn(compileJasperReports)
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mustache')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-mail')
	runtime('org.springframework.boot:spring-boot-devtools')
    //providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	compile('io.github.cdimascio:java-dotenv:3.0.0')

    compile("com.oracle:ojdbc7:12.1.0.1")
    //compile("com.oracle:ojdbc6:11.2.0.3")
    
    //Excel reader
    compile "org.apache.poi:poi:3.17"
    compile "org.apache.poi:poi-ooxml:3.17"
    
    compile('net.sf.jasperreports:jasperreports:6.4.0') {
        exclude group: 'com.itextpdf'
    }
    jasperreports('net.sf.jasperreports:jasperreports:6.4.0')
}

task compileJasperReports {
    def jasperSourceDir = file('src/main/jasperreports')
    ant {
        taskdef(name: 'jrc', classname: 'net.sf.jasperreports.ant.JRAntCompileTask', classpath: configurations.jasperreports.asPath)
        sourceSets.main.output.classesDir.mkdirs()
        jrc(srcdir: jasperSourceDir, destdir: sourceSets.main.output.classesDir) {
            classpath(path: sourceSets.main.output.classesDir)
            include(name: '**/*.jrxml')
        }
    }
}